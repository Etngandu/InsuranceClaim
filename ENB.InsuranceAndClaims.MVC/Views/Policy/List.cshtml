
@{
    ViewData["Title"] = "List";

}

<div class="alert alert-primary" role="alert">
    <h2><strong>Policies : @ViewBag.Message </strong></h2>
</div>
<a asp-action="Create" id="addlawyer" asp-controller="Policy" asp-route-CustomerId="@ViewBag.Idcust" class="btn btn-success text-white" style="margin-bottom:10px"><i class="fa-solid fa-clapperboard"></i> New Policy</a>
<table id="PolicyTable" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>PolicyCode</th>
            <th>StartDate</th>
            <th>EndDate</th>            
            <th> </th>
        </tr>
    </thead>
</table>

<link href="~/lib/datatable/datatable1.13/datatables-1.13.4/css/datatables.bootstrap5.min.css" rel="stylesheet" />

@section scripts{
    <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="~/lib/datatable/datatable1.13/datatables-1.13.4/js/jquery.datatables.min.js"></script>
    <script src="~/lib/datatable/datatable1.13/datatables-1.13.4/js/datatables.bootstrap5.min.js"></script>
    <script>
        var Popup, datatable, Idcustomer = parseInt('@ViewBag.Idcust'), IdWard = parseInt('@ViewBag.Ward_Id')
        $(document).ready(function () {
            datatable = $("#PolicyTable").DataTable({
                "ajax": {
                    "url": "/Policy/GetPolicies/?CustomerId=" + Idcustomer + "",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [

                    { "data": "id" },
                    {
                        "data": "policyTypeCode",
                        "width": "50px",
                        "render": function (data, type, row, meta) {
                            return '<b><a href="/Policy/Details/?id=' + row.id + "&CustomerId=" + Idcustomer + '">' + data + '</b></a>';
                        }
                    },
                    {
                        "data": "startDate", "render": dateFormatter

                    },
                    {
                        "data": "endDate", "render": dateFormatter

                    },
                    
                    {
                        "data": "id", "render": function (data) {
                            return "<a class= 'btn btn-primary btn-sm text-white' onclick=location.href='@Url.Action("Edit","Policy")?id=" + data + "&CustomerId=" + Idcustomer + "'><i class='fas fa-pencil'></i><b> Edit</b></a>" + "\r\n" +
                                "<a class= 'btn btn-danger btn-sm text-white' style = 'margin-left:5px' onclick =location.href='@Url.Action("Delete","Policy")?id=" + data + "&CustomerId=" + Idcustomer + "'> <i class='fa-solid fa-trash-can' > </i><b> Delete</b > </a> " + "\r\n" +
                                "<a class= 'btn btn-info btn-sm' style='margin-left:5px' onclick=location.href='@Url.Action("List", "ClaimHeader")?PolicyId=" + data + "&CustomerId=" + Idcustomer + "'> <i class='fa-solid fa-clapperboard'></i><b> ClaimHeader</b> </a>";
                        },
                        "orderable": false,
                        "searchable": false,
                        "width": "350px"
                    }

                ],
                "language": {

                    "emptyTable": "No data Found, Please Click On <b>Add New</b> Button"
                }

            });

        });




        console.log(Idcustomer);


        function dateFormatter(data) {
            var dateAsString = data;

            var yearNumber = dateAsString.substring(0, 4);
            var monthNumber = dateAsString.substring(5, 7);
            var dayNumber = dateAsString.substring(8, 10);
            var dat = dayNumber + "/" + monthNumber + "/" + yearNumber;
            return dat;
        }

        function ReftypApart(data) {
            var typApart;
            switch (data) {
                case 1:
                    typApart = "Studio"
                    break;
                case 2:
                    typApart = "Alcove studio"
                    break;
                case 3:
                    typApart = "apartment"
                    break;
                case 4:
                    typApart = "Micro apartment"
                    break;
                case 5:
                    typApart = "Loft"
                    break;
                case 6:
                    typApart = "Duplex"
                    break;                   
                case 7:
                    typApart = "Triplex"
                    break;
                default:
                // code block
            }
            return typApart;            
        }

    </script>
    }
